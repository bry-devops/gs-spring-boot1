pool:
  vmImage: 'ubuntu-latest'
  demands: maven
variables:
  resourceGroupName: 'myapp-rg2'
  location: 'westus'
  webAppName: 'jsWithBicep'
  templateFile: 'azure-bicep-template.bicep'

stages:
  - stage: Build
    jobs:
    - job: build
      steps:
      - task: Maven@3
        displayName: 'Maven app/pom.xml'
        inputs:
          mavenPomFile: 'app/pom.xml'
          codeCoverageToolOption: Cobertura
          jdkVersionOption: 1.8

      - task: CopyFiles@2
        displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
        inputs:
          SourceFolder: '$(system.defaultworkingdirectory)'
          Contents: '**/*.jar'
          TargetFolder: '$(build.artifactstagingdirectory)'
        condition: succeededOrFailed()

      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifact: drop'
        inputs:
          PathtoPublish: '$(build.artifactstagingdirectory)'
        condition: succeededOrFailed()

  - stage: Provision 
    jobs:
    - job: provision_infra
      steps:
      - task: AzureCLI@2
        displayName: Preview Bicep Changes
        inputs:
          azureSubscription: 'Pay-As-You-Go (b916e0d5-3358-492b-b756-7ea32791cc88)'
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: |
            az --version
            az group create --name $(resourceGroupName) --location $(location)
            az deployment group what-if --resource-group $(resourceGroupName) \
              --template-file $(templateFile) \
              --parameters webAppName=$(webAppName)

      - task: AzureCLI@2
        displayName: Deploy Bicep To Azure
        inputs:
          azureSubscription: 'Pay-As-You-Go (b916e0d5-3358-492b-b756-7ea32791cc88)'
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: |
            az deployment group create --resource-group $(resourceGroupName) \
              --template-file $(templateFile) \
              --parameters webAppName=$(webAppName)

  - stage: Deploy
    displayName: Deploy App
    dependsOn: provision_infra
    condition: succeeded()
    jobs:
    - deployment: DeployLinuxWebApp
      displayName: Deploy Linux Web App
      environment: 'development'
      pool: 
        vmImage: $(vmImageName)
      strategy:
        runOnce:
          deploy:
            steps:
            - task: DownloadPipelineArtifact@1
              displayName: 'Download Pipeline Artifact'
              inputs:
                buildType: 'current'

            - task: AzureWebApp@1
              displayName: 'Azure Web App Deploy: gs-spring-boot'
              inputs:
                azureSubscription: $(azureSubscription)
                appType: webAppLinux
                appName: $(webAppName)
                package: '$(System.ArtifactsDirectory)/drop/**/target/*.?(war|jar)'

